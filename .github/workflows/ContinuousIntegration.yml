name: ContinuousIntegration

on:
  - push
  - pull_request

jobs:
  test:
    name: Julia ${{ matrix.version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [ '1.4', '1.5', '1.6', '1.7', '1.8', '1.9' ]
        python-version: ['3.10']
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Cache Julia dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.julia/artifacts
            ~/.julia/compiled
          key: julia-${{ runner.os }}-${{ matrix.version }}-${{ hashFiles('**/Project.toml') }}-${{ hashFiles('**/Manifest.toml') }}
          restore-keys: |
            julia-${{ runner.os }}-${{ matrix.version }}-

      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
          key: python-${{ runner.os }}-${{ matrix.version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            python-${{ runner.os }}-${{ matrix.python-version }}-

      - name: Setup Julia
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
        env:
          JULIA_DEPOT_PATH: ~/.julia

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python Dependencies
        run: python -m pip install matplotlib textblob nltk

      - name: Install Julia Dependencies
        run: julia --project=. -e 'using Pkg; Pkg.instantiate()'
        env:
          PYTHON: python

      - name: Run tests
        run: julia --project=. test/runtests.jl

      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3
        with:
          file: lcov.info
